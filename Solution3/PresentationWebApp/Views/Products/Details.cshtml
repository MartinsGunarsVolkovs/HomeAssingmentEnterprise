@model ShoppingCart.Application.ViewModels.ProductViewModel

@{ ViewData["Title"] = "Details"; }@{ int amount = ViewBag.Amount; }
<div class="container">
    <div class="row">
        <div class="col-4">
            <img src="@(Model.ImageUrl)" class="image" alt="...">
            <div class="mt-2 d-flex justify-content-center">
                <a href="/Products/Details?id=@(Model.Id)&amount=@(amount-1)" class="btn btn-warning">-</a>
                <p class="m-2">@amount</p>
                <a href="/Products/Details?id=@(Model.Id)&amount=@(amount+1)" class="btn btn-warning">+</a>
            </div>
            <div class="d-flex justify-content-start">
                <a href="/ShoppingCart/AddToCartDetails?id=@(Model.Id)&amount=@amount " class="btn btn-success mt-3 p-3"><i class="fas fa-shopping-cart"></i> Add to cart</a>
            </div>
        </div>
        <div class="col-8">
            <h1 class="text-black-50">@(Model.Name)</h1>
            <h2 class="text-dark">@(Model.Price) €</h2>
            <p class="text-body"> @(Model.Description)</p>
        </div>
    </div>
</div>
<style>
    .image {
        max-height: 400px;
    }

    .btn-success {
        width: 100%;
        text-align: center;
    }

    .text-body {
        max-width: 100%;
    }
</style>
<!--The script tag is used to retain the position of the page after the controller has been used-->
<!--Reference: https://stackoverflow.com/questions/17642872/refresh-page-and-keep-scroll-position-->
<script>
    document.addEventListener("DOMContentLoaded", function (event) {
        var scrollpos = sessionStorage.getItem('scrollpos');
        if (scrollpos) {
            window.scrollTo(0, scrollpos);
            sessionStorage.removeItem('scrollpos');
        }
    });

    window.addEventListener("beforeunload", function (e) {
        sessionStorage.setItem('scrollpos', window.scrollY);
    });

</script>
@*<div>
        <dl class="row">
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Id)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Price)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Price)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.ImageUrl)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.ImageUrl)
            </dd>
        </dl>
    </div>*@
@*<div>
        @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    </div>*@
